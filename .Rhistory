# prepare the data
infData = as.numeric(infData)
Ntot=length(infData)-1
Npred=30 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=infData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_INF <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
t=seq(1,Ntot+1)
tt=seq(1,N)
#
yp=outputmcmcAR_INF$mean$Yp
q1=outputmcmcAR_INF$q2.5$Yp
q2=outputmcmcAR_INF$q97.5$Yp
#
alpha_true = 0.9
mtrue = mean(infData)
mutrue=alpha_true*infData+mtrue
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,infData,col="red",ylab="mu_t",
main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,infData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_INF$mean$ypOut
q1_pred=outputmcmcAR_INF$q2.5$ypOut
q2_pred=outputmcmcAR_INF$q97.5$ypOut
#
plot(t,gdpData,col="red",ylab="mu_t",ylim=c(min(q1_pred),max(q2_pred)),
main= "out-of-sample prediction (orange)")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
plot(outputmcmcAR_INF$samples[,c("alpha")]
,main="posterior alpha")
#plot(outputmcmcAR_INF$samples[,c("sigma2")],main="posterior sigma^2")
t=seq(1,Ntot+1)
tt=seq(1,N)
#
yp=outputmcmcAR_GDP$mean$Yp
q1=outputmcmcAR_GDP$q2.5$Yp
q2=outputmcmcAR_GDP$q97.5$Yp
#
alpha_true = 0.9
mtrue = mean(gdpData)
mutrue=alpha_true*gdpData+mtrue
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,gdpData,col="red",ylab="mu_t",
main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,gdpData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_GDP$mean$ypOut
q1_pred=outputmcmcAR_GDP$q2.5$ypOut
q2_pred=outputmcmcAR_GDP$q97.5$ypOut
#
plot(t,gdpData,col="red",ylab="mu_t",ylim=c(min(q1_pred),max(q2_pred)),
main= "out-of-sample prediction (orange)")
abline(v=N,col="orange")
#lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
plot(outputmcmcAR_GDP$samples[,c("alpha")]
,main="posterior alpha")
plot(outputmcmcAR_GDP$samples[,c("sigma2")],main="posterior sigma^2")
t=seq(1,Ntot+1)
tt=seq(1,N)
#
yp=outputmcmcAR_INF$mean$Yp
q1=outputmcmcAR_INF$q2.5$Yp
q2=outputmcmcAR_INF$q97.5$Yp
#
alpha_true = 0.9
mtrue = mean(infData)
mutrue=alpha_true*infData+mtrue
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,infData,col="red",ylab="mu_t",
main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,infData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_INF$mean$ypOut
q1_pred=outputmcmcAR_INF$q2.5$ypOut
q2_pred=outputmcmcAR_INF$q97.5$ypOut
#
plot(t,infData,col="red",ylab="mu_t",ylim=c(min(q1_pred),max(q2_pred)),
main= "out-of-sample prediction (orange)")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
plot(outputmcmcAR_INF$samples[,c("alpha")]
,main="posterior alpha")
plot(outputmcmcAR_INF$samples[,c("sigma2")],main="posterior sigma^2")
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
rm(list=ls())
# New Family Houses Sold: United States
# Source: https://fred.stlouisfed.org/series/HSN1F
data = read.csv("data/gdp_inflation.csv",header=T)
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
rm(list=ls())
# New Family Houses Sold: United States
# Source: https://fred.stlouisfed.org/series/HSN1F
data = read.csv("data/gdp_inflation.csv",header=T)
data$DATE = as.Date(data$DATE)
gdpData = data$GDP_PC1[1:305]
infData = data$CPIAUCSL_PC1[1:305]
sum(is.na(data$GDP_PC1)) #conta i valori mancanti(NA) in gdp
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[1:305],infData,type="l",col="red")
#data$CPIAUCSL_PC1
#data1=as.numeric(data$GDP_PC1[1:305])
modelAR.string <-"model {
## parameters: alpha,tau,m0
#likeliohood
mu[1]<-Y[1]
Yp[1]=mu[1]
for (i in 2:N) {
Y[i] ~ dnorm(mu[i],tau)
mu[i]<-m0+alpha*Y[i-1]
Yp[i] ~ dnorm(mu[i],tau) # prediction in sample
}
# prediction out of sample
ypOut[1] ~dnorm(m0+alpha*Y[N],tau)
for(k in 2:Npred){
ypOut[k] ~dnorm(m0+alpha*ypOut[k-1],tau)
}
sigma2<-1/tau
#prior
alpha ~ dunif(-1.5,1.5)
tau ~ dgamma(0.1, 10)
m0 ~dnorm(0.0, 1.0E-4)
}"
# prepare the data
gdpData = as.numeric(gdpData)
Ntot=length(gdpData)
Npred=100 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=gdpData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_GDP <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
t=seq(1,Ntot)
tt=seq(1,N)
#
yp=outputmcmcAR_GDP$mean$Yp
q1=outputmcmcAR_GDP$q2.5$Yp
q2=outputmcmcAR_GDP$q97.5$Yp
#
alpha_hatg = outputmcmcAR_GDP$mean$alpha
m0_hatg = outputmcmcAR_GDP$mean$m0
mutrue=alpha_hatg*gdpData+m0_hatg
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,gdpData,col="red",ylab="mu_t",
main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,gdpData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_GDP$mean$ypOut
q1_pred=outputmcmcAR_GDP$q2.5$ypOut
q2_pred=outputmcmcAR_GDP$q97.5$ypOut
q11_pred=outputmcmcAR_GDP$q25$ypOut
q22_pred=outputmcmcAR_GDP$q75$ypOut
#
plot(t,gdpData,col="red",ylab="mu_t",ylim=c(min(q1),max(q2)),
main= "out-of-sample prediction (orange)")
lines(t,gdpData,col="red")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q11_pred,col="orange",lty=2,lwd = 1.5)
lines(seq((N+1),Ntot,1),q22_pred,col="orange",lty=2,lwd = 1.5)
plot(outputmcmcAR_GDP$samples[,c("alpha")],main="posterior alpha")
plot(outputmcmcAR_GDP$samples[,c("sigma2")],main="posterior sigma^2")
# prepare the data
infData = as.numeric(infData)
Ntot=length(infData)
Npred=100 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=infData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_INF <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
t=seq(1,Ntot)
tt=seq(1,N)
#
yp=outputmcmcAR_INF$mean$Yp
q1=outputmcmcAR_INF$q2.5$Yp
q2=outputmcmcAR_INF$q97.5$Yp
#
alpha_hati = outputmcmcAR_INF$mean$alpha
m0_hati = outputmcmcAR_INF$mean$m0
mutrue=alpha_hati*infData+m0_hati
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,infData,col="red",ylab="mu_t",main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,infData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_INF$mean$ypOut
q1_pred=outputmcmcAR_INF$q2.5$ypOut
q2_pred=outputmcmcAR_INF$q97.5$ypOut
#
plot(t,infData,col="red",ylab="mu_t",ylim=c(min(q1_pred),max(q2_pred)),
main= "out-of-sample prediction (orange)")
lines(t,infData,col="red")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
plot(outputmcmcAR_INF$samples[,c("alpha")]
,main="posterior alpha")
plot(outputmcmcAR_INF$samples[,c("sigma2")],main="posterior sigma^2")
gdpData = log(gdpData)
infData = log(infData)
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[1:305],infData,type="l",col="red")
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[2:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[2:305],infData,type="l",col="red")
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[2:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[2:305],infData,type="l",col="red")
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[2:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
library(readr)
library(zoo)
install.packages("zoo")
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
library(readr)
library(zoo)
rm(list=ls())
# New Family Houses Sold: United States
# Source: https://fred.stlouisfed.org/series/HSN1F
data = read.csv("data/gdp_inflation.csv",header=T)
data$DATE = as.Date(data$DATE)
gdpData = data$GDP_PC1[1:305]
infData = data$CPIAUCSL_PC1[1:305]
sum(is.na(data$GDP_PC1))
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[1:305],infData,type="l",col="red")
#data$CPIAUCSL_PC1
#data1=as.numeric(data$GDP_PC1[1:305])
gdpData = log(gdpData)
gdpData = as.numeric(gdpData)
infData = as.numeric(infData)
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[2:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[2:305],infData,type="l",col="red")
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
library(readr)
library(zoo)
rm(list=ls())
# New Family Houses Sold: United States
# Source: https://fred.stlouisfed.org/series/HSN1F
data = read.csv("data/gdp_inflation.csv",header=T)
data$DATE = as.Date(data$DATE)
gdpData = data$GDP_PC1[1:305]
infData = data$CPIAUCSL_PC1[1:305]
sum(is.na(data$GDP_PC1))
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[1:305],infData,type="l",col="red")
#data$CPIAUCSL_PC1
#data1=as.numeric(data$GDP_PC1[1:305])
gdpData = as.numeric(gdpData)
infData = as.numeric(infData)
gdpData=log(gdpData[2:305])-log(gdpData[1:304])
infData = log(infData[2:305])-log(infData[1:304])
plot(data$DATE[2:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[2:305],infData,type="l",col="red")
sum(is.na(infData))
sum(is.na(gdpData))
modelAR.string <-"model {
## parameters: alpha,tau,m0
#likeliohood
mu[1]<-Y[1]
Yp[1]=mu[1]
for (i in 2:N) {
Y[i] ~ dnorm(mu[i],tau)
mu[i]<-m0+alpha*Y[i-1]
Yp[i] ~ dnorm(mu[i],tau) # prediction in sample
}
# prediction out of sample
ypOut[1] ~dnorm(m0+alpha*Y[N],tau)
for(k in 2:Npred){
ypOut[k] ~dnorm(m0+alpha*ypOut[k-1],tau)
}
sigma2<-1/tau
#prior
alpha ~ dunif(-1.5,1.5)
tau ~ dgamma(0.1, 10)
m0 ~dnorm(0.0, 1.0E-4)
}"
# prepare the data
gdpData = as.numeric(gdpData)
Ntot=length(gdpData)-1
Npred=30 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=gdpData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_GDP <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
rm(list=ls())
library(rjags)
library(bayesplot)
library(jagsUI)
rm(list=ls())
# New Family Houses Sold: United States
# Source: https://fred.stlouisfed.org/series/HSN1F
data = read.csv("data/gdp_inflation.csv",header=T)
data$DATE = as.Date(data$DATE)
gdpData = data$GDP_PC1[1:305]
infData = data$CPIAUCSL_PC1[1:305]
sum(is.na(data$GDP_PC1)) #conta i valori mancanti(NA) in gdp
plot(data$DATE[1:305],gdpData,type="l",xlab="",ylab="GDP",main="GDP+INFL")
lines(data$DATE[1:305],infData,type="l",col="red")
#data$CPIAUCSL_PC1
#data1=as.numeric(data$GDP_PC1[1:305])
modelAR.string <-"model {
## parameters: alpha,tau,m0
#likeliohood
mu[1]<-Y[1]
Yp[1]=mu[1]
for (i in 2:N) {
Y[i] ~ dnorm(mu[i],tau)
mu[i]<-m0+alpha*Y[i-1]
Yp[i] ~ dnorm(mu[i],tau) # prediction in sample
}
# prediction out of sample
ypOut[1] ~dnorm(m0+alpha*Y[N],tau)
for(k in 2:Npred){
ypOut[k] ~dnorm(m0+alpha*ypOut[k-1],tau)
}
sigma2<-1/tau
#prior
alpha ~ dunif(-1.5,1.5)
tau ~ dgamma(0.1, 10)
m0 ~dnorm(0.0, 1.0E-4)
}"
# prepare the data
gdpData = as.numeric(gdpData)
Ntot=length(gdpData)
Npred=100 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=gdpData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_GDP <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
t=seq(1,Ntot)
tt=seq(1,N)
#
yp=outputmcmcAR_GDP$mean$Yp
q1=outputmcmcAR_GDP$q2.5$Yp
q2=outputmcmcAR_GDP$q97.5$Yp
#
alpha_hatg = outputmcmcAR_GDP$mean$alpha
m0_hatg = outputmcmcAR_GDP$mean$m0
mutrue=alpha_hatg*gdpData+m0_hatg
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,gdpData,col="red",ylab="mu_t",
main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,gdpData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_GDP$mean$ypOut
q1_pred=outputmcmcAR_GDP$q2.5$ypOut
q2_pred=outputmcmcAR_GDP$q97.5$ypOut
q11_pred=outputmcmcAR_GDP$q25$ypOut
q22_pred=outputmcmcAR_GDP$q75$ypOut
#
plot(t,gdpData,col="red",ylab="mu_t",ylim=c(min(q1),max(q2)),
main= "out-of-sample prediction (orange)")
lines(t,gdpData,col="red")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q11_pred,col="orange",lty=2,lwd = 1.5)
lines(seq((N+1),Ntot,1),q22_pred,col="orange",lty=2,lwd = 1.5)
plot(outputmcmcAR_GDP$samples[,c("alpha")],main="posterior alpha")
plot(outputmcmcAR_GDP$samples[,c("sigma2")],main="posterior sigma^2")
# prepare the data
infData = as.numeric(infData)
Ntot=length(infData)
Npred=100 # horizon for out-of-sample prediction
N=Ntot-Npred
data_subsample=infData[1:N]
line_data <- list("Y" =data_subsample,"N" = length(data_subsample),"Npred"=Npred)
outputmcmcAR_INF <- jags(model.file=textConnection(modelAR.string),
data=line_data,
parameters.to.save= c('alpha',"sigma2","m0","Yp","ypOut"),
n.adapt=1000, n.iter=10000,n.chains = 1,n.burnin = 2000)
t=seq(1,Ntot)
tt=seq(1,N)
#
yp=outputmcmcAR_INF$mean$Yp
q1=outputmcmcAR_INF$q2.5$Yp
q2=outputmcmcAR_INF$q97.5$Yp
#
alpha_hati = outputmcmcAR_INF$mean$alpha
m0_hati = outputmcmcAR_INF$mean$m0
mutrue=alpha_hati*infData+m0_hati
mutrue=c(0,mutrue)
mutrue=mutrue[1:Ntot]
#
plot(t,infData,col="red",ylab="mu_t",main="data (red), true pred. means (magenta), in samp.pred. (blue)")
lines(t,infData,col="red")
lines(tt,mutrue[1:N],col="magenta",type="p")
points(tt,yp,pch="*",col="blue")
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
#
yp_pred=outputmcmcAR_INF$mean$ypOut
q1_pred=outputmcmcAR_INF$q2.5$ypOut
q2_pred=outputmcmcAR_INF$q97.5$ypOut
#
plot(t,infData,col="red",ylab="mu_t",ylim=c(min(q1_pred),max(q2_pred)),
main= "out-of-sample prediction (orange)")
lines(t,infData,col="red")
abline(v=N,col="orange")
lines(tt,yp,type="p",pch="*",col="blue",)
lines(tt,q1,type="l",col="blue",lwd = 1.5)
lines(tt,q2,type="l",col="blue",lwd = 1.5)
points(seq((N+1),Ntot,1),pch="*",yp_pred,col="orange")
lines(seq((N+1),Ntot,1),q1_pred,col="orange",lwd = 1.5)
lines(seq((N+1),Ntot,1),q2_pred,col="orange",lwd = 1.5)
plot(outputmcmcAR_INF$samples[,c("alpha")]
,main="posterior alpha")
plot(outputmcmcAR_INF$samples[,c("sigma2")],main="posterior sigma^2")
